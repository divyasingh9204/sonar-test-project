def semanticVersion = "${env.BUILD_NUMBER}.0.0"
def version = "${env.BUILD_NUMBER}.0"

def artifactname = "artifact_name_one.jar"
def packageName = "pkg_one_${env.BUILD_NUMBER}"
def repoName = "repo_one"

def artifactname2 = "artifact_name_two.jar"
def packageName2 = "package_two_${env.BUILD_NUMBER}"
def repoName2 = "repo_two"

def artifactname3 = "artifact_name_three.jar"
def packageName3 = "package_three_${env.BUILD_NUMBER}"
def repoName3 = "repo_three"

pipeline {
    agent any

    tools{
        maven "Maven"
    }
    environment{
        SCANNER_HOME=tool "sonarScanner"
    }
    stages {

        stage('STAGE1_PARENT') {
            parallel {
                      stage('STAGE1_PARALLEL_CHILD1') {
                      steps {
                        echo "IN STAGE1 PARALLEL CHILD1"
                        sh 'mvn test'
                        snDevOpsArtifact(artifactsPayload: """{"artifacts": [{"name": "${artifactname}", "version": "1.${env.BUILD_NUMBER}","semanticVersion": "1.${env.BUILD_NUMBER}.0","repositoryName": "${repoName}"}],"stageName": "STAGE1_PARENT/STAGE1_PARALLEL_CHILD1","branchName":"main"}""")
                        //snDevOpsChange()
                    }
                    post{
                        success{
                            echo "TEST SUCCESS"
                            junit "**/target/surefire-reports/*.xml"
                        }
                    }
                }
                      stage('STAGE1_PARALLEL_CHILD2') {
                      steps {
                        echo "IN STAGE1 PARALLEL CHILD2"
                        sh 'mvn test'
                        snDevOpsArtifact(artifactsPayload: """{"artifacts": [{"name": "${artifactname2}", "version": "1.${env.BUILD_NUMBER}","semanticVersion": "1.${env.BUILD_NUMBER}.0","repositoryName": "${repoName2}"}],"stageName": "STAGE1_PARENT/STAGE1_PARALLEL_CHILD2","branchName":"main"}""")
                        snDevOpsPackage(name: "${packageName}", artifactsPayload: """{"artifacts":[{"name": "${artifactname2}", "version": "1.${env.BUILD_NUMBER}", "repositoryName": "${repoName2}"}],"stageName": "STAGE1_PARENT/STAGE1_PARALLEL_CHILD2", "branchName":"main"}""")
                        // add wait time in case package is not built
                        
                    }
                    post{
                        success{
                            echo "TEST SUCCESS"
                            junit "**/target/surefire-reports/*.xml"
                        }
                    }
                }
            }
        }
            stage('STAGE2') {
                  steps{
                    echo "IN STAGE2"
                  //  snDevOpsChange()
                 // snDevOpsChange changeCreationTimeOut: 30, changeRequestDetails: '{ "attributes": { "short_description": "Test description", "priority": "1", "start_date": "2021-02-05 08:00:00", "end_date": "2022-04-05 08:00:00", "justification": "test justification", "description": "test description", "cab_required": true, "comments": "This update for work notes is from jenkins file", "work_notes": "test work notes", "assignment_group": "a715cd759f2002002920bde8132e7018" }, "setCloseCode": false }', changeStepTimeOut: 20, pollingInterval: 10
                 //snDevOpsChange abortOnChangeStepTimeOut: false, changeCreationTimeOut: 30, changeRequestDetails: '{ "attributes": { "short_description": "Test description", "priority": "1", "start_date": "2021-02-05 08:00:00", "end_date": "2022-04-05 08:00:00", "justification": "test justification", "description": "test description", "cab_required": true, "comments": "This update for work notes is from jenkins file", "work_notes": "test work notes", "assignment_group": "a715cd759f2002002920bde8132e7018" }, "setCloseCode": false }', changeStepTimeOut: 20, pollingInterval: 10
                 //  snDevOpsChange changeCreationTimeOut: 30, changeRequestDetails: '{ "attributes": { "short_description": "Test description", "priority": "1", "start_date": "2021-02-05 08:00:00", "end_date": "2022-04-05 08:00:00", "justification": "test justification", "description": "test description", "cab_required": true, "comments": "This update for work notes is from jenkins file", "work_notes": "test work notes", "assignment_group": "a715cd759f2002002920bde8132e7018" }, "setCloseCode": false }', changeStepTimeOut: 60, pollingInterval: 10
                  //  snDevOpsChange abortOnChangeStepTimeOut: false, changeCreationTimeOut: 30, changeRequestDetails: '{ "attributes": { "short_description": "Test description", "priority": "1", "start_date": "2021-02-05 08:00:00", "end_date": "2022-04-05 08:00:00", "justification": "test justification", "description": "test description", "cab_required": true, "comments": "This update for work notes is from jenkins file", "work_notes": "test work notes", "assignment_group": "a715cd759f2002002920bde8132e7018" }, "setCloseCode": false }', changeStepTimeOut: 60, pollingInterval: 10
                  // snDevOpsChange changeCreationTimeOut: 50, changeRequestDetails: '{ "attributes": { "short_description": "Test description", "priority": "1", "start_date": "2021-02-05 08:00:00", "end_date": "2022-04-05 08:00:00", "justification": "test justification", "description": "test description", "cab_required": true, "comments": "This update for work notes is from jenkins file", "work_notes": "test work notes", "assignment_group": "a715cd759f2002002920bde8132e7018" }, "setCloseCode": false }', changeStepTimeOut: 60, pollingInterval: 10
                 // snDevOpsChange abortOnChangeCreationFailure: false, changeCreationTimeOut: 50, changeRequestDetails: '{ "attributes": { "short_description": "Test description", "priority": "1", "start_date": "2021-02-05 08:00:00", "end_date": "2022-04-05 08:00:00", "justification": "test justification", "description": "test description", "cab_required": true, "comments": "This update for work notes is from jenkins file", "work_notes": "test work notes", "assignment_group": "a715cd759f2002002920bde8132e7018" }, "setCloseCode": false }', changeStepTimeOut: 60//, pollingInterval: 10
                //snDevOpsChange abortOnChangeCreationFailure: true, changeCreationTimeOut: 50, changeRequestDetails: '{ "attributes": { "short_description": "Test description", "priority": "1", "start_date": "2021-02-05 08:00:00", "end_date": "2022-04-05 08:00:00", "justification": "test justification", "description": "test description", "cab_required": true, "comments": "This update for work notes is from jenkins file", "work_notes": "test work notes", "assignment_group": "a715cd759f2002002920bde8132e7018" }, "setCloseCode": false }', changeStepTimeOut: 60//,pollingInterval: 0
                snDevOpsChange changeCreationTimeOut: 50, changeRequestDetails: '{ "attributes": { "short_description": "Test description", "priority": "1", "start_date": "2021-02-05 08:00:00", "end_date": "2022-04-05 08:00:00", "justification": "test justification", "description": "test description", "cab_required": true, "comments": "This update for work notes is from jenkins file", "work_notes": "test work notes", "assignment_group": "a715cd759f2002002920bde8132e7018" }, "setCloseCode": false }', changeStepTimeOut: 70
                }

        }
         stage('STAGE3') {
                  steps{
                    echo "IN STAGE3"
                  }
        }
                  
    }
}
